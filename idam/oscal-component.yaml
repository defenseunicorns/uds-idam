component-definition:
  uuid: 6d927295-e0ed-491a-b54f-4fa5282522fb
  metadata:
    title: Keycloak Component
    last-modified: '2023-10-19T13:57:53Z'
    version: "20231019"
    oscal-version: 1.1.1
    parties:
    - uuid: f3cf70f8-ba44-4e55-9ea3-389ef24847d3
      type: organization
      name: Defense https://raw.githubusercontent.com/usnistgov/oscal-content/master/nist.gov/SP800-53/rev5/json/NIST_SP-800-53_rev5_catalog.json
      links:
      - href: https://defenseunicorns.com
        rel: website
  components:
  - uuid: 40e91667-00a1-450b-a99e-ac09bd6af568
    type: software
    title: Keycloak
    description: |
      An implementation of a customizable Keycloak for single sign-on (SSO) with Identity and Access Management
    purpose: Provides user federation, strong authentication, user management, fine-grained authorization.
    responsible-roles:
    - role-id: provider
      party-uuids:
      - f3cf70f8-ba44-4e55-9ea3-389ef24847d3
    control-implementations:
    - uuid: 44bb0268-355d-455b-be33-7fc6ecc89668
      source: https://raw.githubusercontent.com/usnistgov/oscal-content/master/nist.gov/SP800-53/rev5/json/NIST_SP-800-53_rev5_catalog.json
      description:
        Controls implemented by Keycloak for inheritance by applications
      implemented-requirements:
      - uuid: 1ce3a643-b763-42a1-a104-e9c8860716b7
        control-id: ac-1
        description: >-
          System-level access controls

          Keycloak supports fine-grained authorization policies and is able to combine different access control mechanisms such as:

            - Attribute-based access control (ABAC)
            - Role-based access control (RBAC)
            - User-based access control (UBAC)
            - Context-based access control (CBAC)
            - Rule-based access control
            - Using JavaScript
            - Time-based access control
            - Support for custom access control mechanisms (ACMs) through a Policy Provider Service Provider Interface (SPI)

          Keycloak is based on a set of administrative UIs and a RESTful API, and provides the necessary means to create permissions for your protected resources and scopes, associate those permissions with authorization policies, and enforce authorization decisions in your applications and services.

          Resource servers (applications or services serving protected resources) usually rely on some kind of information to decide if access should be granted to a protected resource. For RESTful-based resource servers, that information is usually obtained from a security token, usually sent as a bearer token on every request to the server. For web applications that rely on a session to authenticate users, that information is usually stored in a userâ€™s session and retrieved from there for each request.

          Permissions can be created to protect two main types of objects:

            - Resources: resource-based permission defines a set of one or more resources to protect using a set of one or more authorization policies.
            - Scopes: scope-based permissions defines a set of one or more scopes to protect using a set of one or more authorization policies. Unlike resource-based permissions, you can use this permission type to create permissions not only for a resource, but also for the scopes associated with it, providing more granularity when defining the permissions that govern your resources and the actions that can be performed on them.

            https://www.keycloak.org/docs/latest/authorization_services/

          Organizational access controls

          Organizational roles could be broken down into cluster admins, resource owners / administrators, clients / users
      - uuid: bf4cbb54-9e2f-4f5c-bc4e-9c9e2ba14e7f
        control-id: ac-2
        description: >-
            a/c. Non-privileged and privilege users are prohibited by the keycloak unless granted access through membership of RBAC roles. 
            b. Keycloak can be configured for fine grain permissions to assign account managers.
            d (1-3). Declarative groups specify authorized users, groups, and roles. Access authorizations and assignment is determined by the organization.
            e. Account creation requests are handled by Day 2 operations of keycloak.
            f. Declarative groups assist in the handling of accounts, but ultimate is is a day 2 operation.
            g. Keycloak web UI has a queryable audit logging feature and backend logs can be monitored.
            h (1-3). Account Manager notification when accounts are no longer needed, users are terminated, or need to know changes
            are handled by Day 2 operations of keycloak.
            i (1-3). Authorized access to the system based on valid access, intended usage, and other org defined Attribute-based
            is handled by Day 2 operations of keycloak.
            j. Account reviews for compliance is handled by day 2 operations.
            k. Account and group authenticators removal notification is Handled by Day 2 operations of keycloak.
            l. Account management process alignment with personnel terminations and transfers is handled by Day 2 operations of keycloak.
      - uuid: 4dde82ad-0e64-4a25-862c-6693e6dd94be
        control-id: ac-2.1
        description: >-
          Keycloak allows the creation of clients that provide login to app via Keycloak, allowing account management
          to be inherited from keycloak. There are roughly 30 different event types in keycloak and an event listener
          can be configured to notify when an account is created, enabled, modified, disabled, or removed, or when
          users are terminated or transferred.
      - uuid: ccedc338-e59b-4ed1-b70d-50a03e9e4b1b
        control-id: ac-2.4
        description: >-
          Keycloak automatically logs and audits account-related events, including account creation, modifications,
          enabling, disabling, and removal. These logs capture all essential details, from changes to attributes and 
          roles to changes in account status.
      - uuid: bb0b7d48-7d5c-4df0-8b1d-28c0d1c188d2
        control-id: ac-2.5
        description: >-
          Keycloak is configured with login timeout, session tokens, etc. and are managed in realm settings/tokens
      - uuid: aff80192-b250-43ef-a544-fdb92408e1ad
        control-id: ac-2.12
        description: >-
          Keycloak automatically logs and audits account-related events, including account creation, modifications,
          enabling, disabling, and removal. These logs capture all essential details, from changes to attributes and 
          roles to changes in account status. There are roughly 30 different event types in keycloak and an event listener
          can be configured and automated via email, external webhook, and logging stack monitored by admins to notify
          when an account is created, enabled, modified, disabled, or removed, or when users are terminated or transferred.
      - uuid: f41015c2-7784-4932-9962-cf090c1dc19c
        control-id: ac-2.13
        description: >-
          In response to the specified control description emphasizing the management of users who pose significant security 
          and/or privacy risks, our organization has instituted protocols to address these concerns. Administrators have the 
          capability to closely monitor and manage user access based on reliable evidence suggesting malicious intentions or 
          significant risks. The organization recognizes the potential threats posed by individuals with the intention to use 
          authorized system access harmfully or through whom adversaries might cause harm. Such intentions could lead to 
          detrimental impacts on organizational operations, assets, individuals, and more. To proactively counteract these 
          threats, our system administrators collaborate closely with legal staff, human resource managers, and authorizing 
          officials. This coordination is paramount, especially when it comes to the decision to disable system accounts for 
          individuals identified as high-risk. By doing so, we ensure that our organization remains vigilant and responsive to 
          any potential threats from within.
      - uuid: 4fa5a9c9-5c6a-4aef-8668-5f55c6069d70
        control-id: ac-3
        description: >-
          Keycloak allows the creation of clients that provide login to app via Keycloak, allowing account management
          to be inherited from keycloak and the enforcement of approved authorizations for logical access to information and
          system resources.
      - uuid: b9d2c6dc-36a2-484b-a4e2-b49c8bfba28f
        control-id: ac-4
        description: >-
          Keycloak is deployed in a stand-alone DUBBD cluster with TLS passthrough for OIDC/SAML integration.
          Controls are inherited from istio via network policies, virtual services and gateway configs.
      - uuid: 9e19167c-b29f-44c8-8075-95fe53770f05
        control-id: ac-4.4
        description: >-
          Keycloak is designed and recommended to be deployed in a stand-alone BB cluster with TLS passthrough for OIDC/SAML integration.
          Controls are inherited from istio via network policies, virtual services and gateway configs.
      - uuid: 810053a7-b1d3-4476-8b0b-2eeed796c0f7
        control-id: ac-5
        description: >-
          Keycloak utilizes RBAC to define system access authorizations to support separation of duties.
      - uuid: 9fbe4b4a-ac70-4a16-b7b9-24c5b64e4cef
        control-id: ac-6
        description: >-
          Keycloak utilizes RBAC to define system access authorizations to support least privilege.
      - uuid: 52776faa-3bf0-4b9c-ac51-27329006002a
        control-id: ac-6.1
        description: >-
          Keycloak as an IDM / IAM provider supports least privilege through user / group management (ABAC / RBAC) service offerings
      - uuid: 391de0d3-d891-4fbf-b652-8932c4ef2c5b
        control-id: ac-6.2
        description: >-
          Keycloak as an IDM / IAM provider supports least privilege through user / group management (ABAC / RBAC) service offerings
      - uuid: 04f6d2ed-9168-41fb-b540-acdd91144e8c
        control-id: ac-6.5
        description: >-
          Keycloak as an IDM / IAM provider supports least privilege through user / group management (ABAC / RBAC) service offerings
      - uuid: 4e47e8f8-eb77-4c4f-9812-ab133d3565ad
        control-id: ac-6.9
        description: >-
           Keycloak automatically logs and audits account-related events, including account creation, modifications, enabling, disabling, 
           and removal. These logs capture all essential details, from changes to attributes and roles to changes in account status including
           privileged functions.
      - uuid: f5fc2af2-31d2-465b-b6ea-b561c2152021
        control-id: ac-6.10
        description: >-
          Keycloak as an IDM / IAM provider supports least privilege through user / group management (ABAC / RBAC) service offerings
      - uuid: 2b626416-4c10-426c-af44-3f4fbd087227
        control-id: ac-7
        description: >-
          Keycloak has brute force protection which has three components: max login failures, quick login check (time between failures)
          & minimum quick login check wait (time user will be disabled when multiple login failures are detected)
      - uuid: 7588ce75-9d71-4cf8-8775-c9329ff11e2a
        control-id: ac-8
        description: >-
          Keycloak has a standard DOD login banner see https://login.dso.mil
      - uuid: d6287b1e-ed08-420b-ad30-80f79ddc158a
        control-id: ac-10
        description: >-
          Keycloak can limit the number of concurrent user sessions.
      - uuid: d3dfd5a2-461b-4f57-8bdb-e4efd9cbfa6d
        control-id: ac-12
        description: >-
          Keycloak can terminate user sessions after defined session disconnect.
      - uuid: 552d3d1c-bb27-4e73-975f-ab425a4cdc19
        control-id: ac-14
        description: >-
          Keycloak has the ability to allow anonymous access to resource if Client Access Type is set to public.
      - uuid: 51e4bd78-eebb-48f1-9152-65c4caebb74e
        control-id: ac-17.1
        description: >-
          Keycloak manages remote access to other applications through IAM.
      - uuid: 254e236e-7eb3-4001-a75e-e5034412ca76
        control-id: ac-17.2
        description: >-
          Keycloak employs a multifaceted approach to ensure the encryption and protection of data, supporting compliance requirements. 
          It communicates over HTTPS, leveraging Transport Layer Security (TLS) to safeguard the confidentiality and integrity of data while 
          in transit. Additionally, Keycloak's token-based authentication mechanism utilizes JSON Web Tokens (JWT) to assert identity. 
          These tokens are cryptographically signed, and optionally encrypted, to validate their integrity and shield their contents. 
          As an identity provider, Keycloak also supports the Security Assertion Markup Language (SAML) 2.0, a robust authentication and 
          authorization protocol that uses cryptographic methods for secure single sign-on processes. By incorporating these mechanisms, 
          Keycloak provides a secure environment that aligns with compliance control requirements related to encryption and data protection.
      - uuid: 210b1a83-fc62-43cd-b3f2-89a94f75ed15
        control-id: ac-17.3
        description: >-
          Keycloak remote access traffic is routed through secure Istio network.
      - uuid: 5df00124-c0f9-41d3-b38e-ad4ecbd27a56
        control-id: ac-17.4
        description: >-
          Keycloak supports authorizing the execution of privileged commands through remote access using RBAC roles. While providing remote access
          is handled through other means to the system, Keycloak authorizes the access and provides the privileges attached.
      - uuid: a2e33e11-1b7d-4391-b7f5-7752dfe147e6
        control-id: au-2
        description: >-
          Keycloak captures user and admin events and ships them out to a logging server for analysis or trigger an action on specific event via customizable EventListeners.
      - uuid: f31018fe-03b7-4eda-9aaf-6926cb1b2849
        control-id: au-3
        description: >-
          Keycloak events contain what, when, where, source, and objects/entities for policy violations.
      - uuid: 302d6ca9-5e85-40bc-ab2d-103366466e53
        control-id: au-3.1
        description: >-
          Keycloak event logs include Time, Event Type, Details (Client, User, IP Address). Events are shipped to logging.
      - uuid: df820b32-27cb-4b8d-bebf-0ce1e769913d
        control-id: au-4
        description: >-
          Keycloak events can be both saved to database and shipped to logging server. Both systems are external to Keycloaks application server.
      - uuid: 23e31f50-7ef1-4fff-8d73-1693f430f285
        control-id: au-7
        description: >-
          Keycloak provides audit records.
      - uuid: 84022485-4825-4770-b4ad-ab77e7576923
        control-id: au-7.1
        description: >-
          Within Keycloak records, sorting and searching are supported.
      - uuid: 844ecfc3-fd1e-4e88-a7ae-f31940979204
        control-id: au-8
        description: >-
          Keycloak saves timestamps in event logs
      - uuid: 7625bd08-d840-4131-aed4-b592cbdb9d19
        control-id: au-9
        description: >-
          Keycloak provides RBAC to restrict management of logs.
      - uuid: 9d5e5dea-2716-432a-9b41-19b3a7394473
        control-id: au-9.4
        description: >-
          Keycloak provides RBAC to restrict management of logs.
      - uuid: d16a42e4-15c0-49ac-b476-fae598fb7948
        control-id: ia-2
        description: >-
          Keycloak supports control through its IAM/SSO service.
      - uuid: e918b4cf-c7e9-4a10-b1f9-c0b932c656cb
        control-id: ia-2.1
        description: >-
          Keycloak supports MFA using mobile and x509 mTLS for both privileged and non-privileged account management.
      - uuid: 888e1a48-0738-416e-ac87-f6c2fcabc40b
        control-id: ia-2.2
        description: >-
          Keycloak supports MFA using mobile and x509 mTLS for both privileged and non-privileged account management.
      - uuid: 205ba589-efa3-4394-87e2-589ba5a18355
        control-id: ia-2.12
        description: >-
          Keycloak supports PIV credentials.
      - uuid: 7d70915d-7302-45f8-b53c-85de8fd9e523
        control-id: ia-4
        description: >-
          Keycloak assigns users, groups, roles, services, or devices with a UUID that is unique to each.
      - uuid: d4c029a1-fef8-44b2-b0e8-df4f839c8473
        control-id: ia-4.4
        description: >-
          Keycloak assigns users, groups, roles, services, or devices with a UUID that is unique to each.
      - uuid: 83bef4f9-f322-4ad0-a2ed-e865acd43015
        control-id: ia-5.1
        description: >-
          Keycloak provides password-policies to support control. https://github.com/keycloak/keycloak-documentation/blob/main/server_admin/topics/authentication/password-policies.adoc
      - uuid: 2898a2f5-905a-4ab6-b66b-4a42dec239f5
        control-id: ia-5.2
        description: >-
          Keycloak supports OCSP checking, and truststore/chain validation for x509 PKI access.
      - uuid: e9eaaf1d-f400-4a50-babd-b166d22f77e1
        control-id: ia-8.1
        description: >-
          Keycloak supports authenticating non-organizational users through supporting mTLS signed by external certificate authorities.
      - uuid: 4e1dedd3-3114-4955-bcb8-95fad5b3a073
        control-id: ia-11
        description: >-
          Keycloak supports OIDC/SAML which support expiration dates in tokens/assertions.
