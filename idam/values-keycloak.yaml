fullnameOverride: keycloak
image:
  repository: ghcr.io/defenseunicorns/uds-idam/keycloak
  tag: "21.1.2-0.1"
args:
- start
- --import-realm
command:
- /opt/keycloak/bin/kc.sh
domain: bigbang.dev
extraEnv: |-
  - name: KC_HTTPS_CERTIFICATE_FILE
    value: /opt/keycloak/conf/tls.crt
  - name: KC_HTTPS_CERTIFICATE_KEY_FILE
    value: /opt/keycloak/conf/tls.key
  - name: KC_HTTPS_CLIENT_AUTH
    value: request
  - name: KC_PROXY
    value: passthrough
  - name: KC_HTTP_ENABLED
    value: "true"
  - name: KC_HTTP_RELATIVE_PATH
    value: /auth
  - name: KC_HOSTNAME
    value: keycloak.###ZARF_VAR_DOMAIN###
  - name: KC_HOSTNAME_STRICT
    value: "true"
  - name: KC_HOSTNAME_STRICT_HTTPS
    value: "true"
  - name: KC_LOG_LEVEL
    value: "org.keycloak.events:DEBUG,org.infinispan:INFO,org.jgroups:INFO"
  - name: KC_CACHE
    value: ispn
  - name: KC_CACHE_STACK
    value: kubernetes
extraVolumeMounts: |-
  - name: quarkusproperties
    mountPath: /opt/keycloak/conf/quarkus.properties
    subPath: quarkus.properties
extraVolumeMountsBigBang:
- mountPath: /etc/x509/https/tls.crt
  name: tlscert
  readOnly: true
  subPath: tls.crt
- mountPath: /etc/x509/https/tls.key
  name: tlskey
  readOnly: true
  subPath: tls.key
- mountPath: /opt/keycloak/conf/tls.crt
  name: tlscert
  readOnly: true
  subPath: tls.crt
- mountPath: /opt/keycloak/conf/tls.key
  name: tlskey
  readOnly: true
  subPath: tls.key
extraVolumes: |-
  - name: quarkusproperties
    secret:
      secretName: {{ include "keycloak.fullname" . }}-quarkusproperties
      defaultMode: 0777
extraVolumesBigBang:
- name: tlscert
  secret:
    secretName: keycloak-tlscert
- name: tlskey
  secret:
    secretName: keycloak-tlskey
hostname: bigbang.dev
istio:
  enabled: true
  injection: enabled
  keycloak:
    enabled: true
    gateways:
    - istio-system/passthrough
    hosts:
    - keycloak.###ZARF_VAR_DOMAIN###

monitoring:
  enabled: false
networkPolicies:
  controlPlaneCidr: 0.0.0.0/0
  enabled: true
  ingressLabels:
    app: passthrough-ingressgateway
    istio: null
postgresql:
  enabled: ###ZARF_VAR_KEYCLOAK_DEV_DB_ENABLED###
  fullnameOverride: keycloak-postgresql
  postgresqlUsername: ###ZARF_VAR_KEYCLOAK_DB_USERNAME###
  postgresqlPassword: ###ZARF_VAR_KEYCLOAK_DB_PASSWORD###
replicas: 1
secrets:
  env:
    stringData:
      KEYCLOAK_ADMIN: ###ZARF_VAR_KEYCLOAK_ADMIN_USERNAME###
      KEYCLOAK_ADMIN_PASSWORD: ###ZARF_VAR_KEYCLOAK_ADMIN_PASSWORD###
      KC_DB_USERNAME: ###ZARF_VAR_KEYCLOAK_DB_USERNAME###
      KC_DB_PASSWORD: ###ZARF_VAR_KEYCLOAK_DB_PASSWORD###
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://###ZARF_VAR_KEYCLOAK_DB_ENDPOINT###/###ZARF_VAR_KEYCLOAK_DB_NAME###
  quarkusproperties:
    stringData:
      quarkus.properties: |-
        quarkus.http.non-application-root-path=/
        # custom redirects
        quarkus.kc-routing.path-redirect./=/auth/realms/###ZARF_VAR_REALM###/account
        quarkus.kc-routing.path-redirect./auth=/auth/realms/###ZARF_VAR_REALM###/account
        quarkus.kc-routing.path-redirect./register=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/registrations?client_id=account&response_type=code
        quarkus.kc-routing.path-prefix./oauth/authorize=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/auth
        quarkus.kc-routing.path-filter./api/v4/user=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/userinfo
        quarkus.kc-routing.path-filter./oauth/token=/auth/realms/###ZARF_VAR_REALM###/protocol/openid-connect/token
        # block metrics and health enpoints from being exposed through the istio ingress
        quarkus.kc-routing.path-recursive-block./metrics=8443
        quarkus.kc-routing.path-recursive-block./health=8443
  tlscert:
    stringData:
      tls.crt: |
        ###ZARF_VAR_KEYCLOAK_CERT_FILE###
  tlskey:
    stringData: 
      tls.key: |
        ###ZARF_VAR_KEYCLOAK_KEY_FILE###
